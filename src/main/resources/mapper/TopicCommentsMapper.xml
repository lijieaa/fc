<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jianpanmao.topic_comments.dao.TopicCommentsMapper">
  <resultMap id="BaseResultMap" type="com.jianpanmao.topic_comments.entity.TopicComments">
    <id column="topic_comments_id" property="topicCommentsId" jdbcType="INTEGER" />
    <result column="topic_id" property="topicId" jdbcType="INTEGER" />
    <result column="topic_comments_create_time" property="topicCommentsCreateTime" jdbcType="TIMESTAMP" />
    <result column="topic_comments_update_time" property="topicCommentsUpdateTime" jdbcType="TIMESTAMP" />
    <result column="topic_comments_content" property="topicCommentsContent" jdbcType="LONGVARCHAR" />
    <association property="user" javaType="com.jianpanmao.sys.entity.DingtalkUser">
      <id property="userid" column="userid"></id>
      <result property="name" column="name"></result>
      <result property="headPic" column="head_pic"></result>
    </association>
  </resultMap>


  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.jianpanmao.topic_comments.entity.TopicComments">
    <result column="topic_comments_content" jdbcType="LONGVARCHAR" property="topicCommentsContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    topic_comments_id, topic_id, user_id, topic_comments_create_time, topic_comments_update_time
  </sql>
  <sql id="Blob_Column_List">
    topic_comments_content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.jianpanmao.topic_comments.entity.TopicCommentsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from topic_comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.jianpanmao.topic_comments.entity.TopicCommentsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from topic_comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from topic_comments
    where topic_comments_id = #{topicCommentsId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from topic_comments
    where topic_comments_id = #{topicCommentsId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jianpanmao.topic_comments.entity.TopicCommentsExample">
    delete from topic_comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jianpanmao.topic_comments.entity.TopicComments">
    insert into topic_comments (topic_id, user_id,
      topic_comments_content)
    values (
    #{topicId,jdbcType=INTEGER},
    #{user.userid,jdbcType=INTEGER},
      #{topicCommentsContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jianpanmao.topic_comments.entity.TopicComments">
    insert into topic_comments
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="topicCommentsId != null">
        topic_comments_id,
      </if>
      <if test="topicId != null">
        topic_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="topicCommentsCreateTime != null">
        topic_comments_create_time,
      </if>
      <if test="topicCommentsUpdateTime != null">
        topic_comments_update_time,
      </if>
      <if test="topicCommentsContent != null">
        topic_comments_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="topicCommentsId != null">
        #{topicCommentsId,jdbcType=INTEGER},
      </if>
      <if test="topicId != null">
        #{topicId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="topicCommentsCreateTime != null">
        #{topicCommentsCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="topicCommentsUpdateTime != null">
        #{topicCommentsUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="topicCommentsContent != null">
        #{topicCommentsContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jianpanmao.topic_comments.entity.TopicCommentsExample" resultType="java.lang.Long">
    select count(*) from topic_comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update topic_comments
    <set>
      <if test="record.topicCommentsId != null">
        topic_comments_id = #{record.topicCommentsId,jdbcType=INTEGER},
      </if>
      <if test="record.topicId != null">
        topic_id = #{record.topicId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.topicCommentsCreateTime != null">
        topic_comments_create_time = #{record.topicCommentsCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.topicCommentsUpdateTime != null">
        topic_comments_update_time = #{record.topicCommentsUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.topicCommentsContent != null">
        topic_comments_content = #{record.topicCommentsContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update topic_comments
    set topic_comments_id = #{record.topicCommentsId,jdbcType=INTEGER},
      topic_id = #{record.topicId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      topic_comments_create_time = #{record.topicCommentsCreateTime,jdbcType=TIMESTAMP},
      topic_comments_update_time = #{record.topicCommentsUpdateTime,jdbcType=TIMESTAMP},
      topic_comments_content = #{record.topicCommentsContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update topic_comments
    set topic_comments_id = #{record.topicCommentsId,jdbcType=INTEGER},
      topic_id = #{record.topicId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      topic_comments_create_time = #{record.topicCommentsCreateTime,jdbcType=TIMESTAMP},
      topic_comments_update_time = #{record.topicCommentsUpdateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jianpanmao.topic_comments.entity.TopicComments">
    update topic_comments
    <set>
      <if test="topicId != null">
        topic_id = #{topicId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="topicCommentsCreateTime != null">
        topic_comments_create_time = #{topicCommentsCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="topicCommentsUpdateTime != null">
        topic_comments_update_time = #{topicCommentsUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="topicCommentsContent != null">
        topic_comments_content = #{topicCommentsContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where topic_comments_id = #{topicCommentsId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.jianpanmao.topic_comments.entity.TopicComments">
    update topic_comments
    set topic_id = #{topicId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      topic_comments_create_time = #{topicCommentsCreateTime,jdbcType=TIMESTAMP},
      topic_comments_update_time = #{topicCommentsUpdateTime,jdbcType=TIMESTAMP},
      topic_comments_content = #{topicCommentsContent,jdbcType=LONGVARCHAR}
    where topic_comments_id = #{topicCommentsId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jianpanmao.topic_comments.entity.TopicComments">
    update topic_comments
    set topic_id = #{topicId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      topic_comments_create_time = #{topicCommentsCreateTime,jdbcType=TIMESTAMP},
      topic_comments_update_time = #{topicCommentsUpdateTime,jdbcType=TIMESTAMP}
    where topic_comments_id = #{topicCommentsId,jdbcType=INTEGER}
  </update>
  <select id="selectAll" parameterType="com.jianpanmao.topic_comments.entity.TopicComments" resultMap="BaseResultMap">
    select * from topic_comments
  </select>
  <delete id="deleteBatch" parameterType="java.util.ArrayList">
    delete from topic_comments
    where topic_comments_id in
    <foreach collection="array" index="index" item="item" open="(" separator="," close=")">
              #{item}
    </foreach>
  </delete>
  <select id="selectByDto" parameterType="com.jianpanmao.topic_comments.dto.TopicCommentsDto" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from topic_comments where 1=1
    <if test="topicCommentsId!=null">
      and topic_comments_id=#{topicCommentsId}
    </if>
    <if test="topicId!=null">
      and topic_id=#{topicId}
    </if>
    <if test="userId!=null">
      and user_id=#{userId}
    </if>
    <if test="topicCommentsCreateTime!=null">
      and topic_comments_create_time=#{topicCommentsCreateTime}
    </if>
    <if test="topicCommentsUpdateTime!=null">
      and topic_comments_update_time=#{topicCommentsUpdateTime}
    </if>
    <if test="topicCommentsContent!=null and '' neq topicCommentsContent">
      and topic_comments_content=#{topicCommentsContent}
    </if>
    <if test="od!=null and od neq ''">
      order by ${od}
    </if>
  </select>

  <select id="findByTopicId" resultMap="BaseResultMap">
    select tc.*,u.userid,u.name,u.head_pic
    from topic_comments tc
    LEFT JOIN  dingtalk_user u ON tc.user_id = u.userid WHERE tc.topic_id = #{0}
    ORDER BY topic_comments_create_time DESC
  </select>

  <select id="findCommentsCount" resultType="Integer">
    select COUNT(*)
    from topic_comments tc
    WHERE tc.topic_id = #{0}
  </select>
</mapper>